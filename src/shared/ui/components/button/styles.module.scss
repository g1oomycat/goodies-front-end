@use '/src/app/styles/scss/break_point.scss' as *;

.root {
	position: relative;

	box-shadow: none;
	@include transition();
	width: auto;
	line-height: 1;
	text-wrap: nowrap;

	&:disabled {
		cursor: not-allowed;
	}
}
.public {
	&.primary {
		color: var(--color-text-inverted);
		background-color: var(--color-btn-bg);
		&:not(:disabled):hover {
			background-color: rgba($color: #000000, $alpha: 0.9);
			color: var(--color-pink);
		}

		&:disabled {
			background-color: var(--color-bg-disabled);
		}
	}
	&.second {
		background-color: transparent;
		color: var(--color-text);
		border: 1px solid var(--color-border);
		&:not(:disabled):hover {
			background-color: var(--color-bg-active);
		}
		&:disabled {
			background-color: var(--color-bg-disabled);
		}
	}
}
.admin {
	border-radius: 0.5rem;
	&.primary {
		color: var(--color-text-inverted);
		background-color: var(--color-btn-bg);

		&:not(:disabled):hover {
			// background-color: $red;
			background-color: var(--color-btn-bg-hover);
		}
		&:disabled {
			background-color: var(--color-bg-disabled);
		}
	}
	&.second {
		background-color: transparent;
		color: var(--color-text);
		border: 1px solid var(--color-border);
		&:not(:disabled):hover {
			background-color: var(--color-bg-active);
		}
		&:disabled {
			background-color: var(--color-bg-disabled);
		}
	}
}
.none {
	color: inherit;
	background-color: inherit;
	font-size: inherit;
	text-transform: inherit;
	letter-spacing: inherit;
	font-weight: inherit;
	&:not(:disabled):hover {
		color: var(--color-red);
	}
}
.s {
	padding: 0.9rem 2rem;
}
.m {
	padding: 1.3rem 2.5rem;
}
.l {
	padding: 1.7rem 3rem;
}
@media (max-width: $breakpoint-SCREEN_MD_D) {
	.l {
		padding: 1.3rem 2.5rem;
	}
}
.contain {
	padding-top: 0rem;
	padding-bottom: 0rem;
	height: 100%;
}
.icon,
.icon_active {
	display: flex;
	align-items: center;
	justify-content: center;
}

.root {
	&.icon_active {
		color: var(--color-pink);
	}
}

.fullWidth {
	width: 100%;
	padding-left: 0.5rem;
	padding-right: 0.5rem;
	display: flex;
	justify-content: center;
}
.loader {
	position: absolute;
	top: 50%;
	left: 50%;
	width: 8rem;
	transform: translate(-50%, -50%);
}
